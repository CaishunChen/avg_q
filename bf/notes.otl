2009-09-18 12-27-56 fstat fault with CIFS
 In read_rec, fstat() fails when the accessed file is on a CIFS mount...
 Error message: "Value too large for defined data type"
 This creates problems at least if trying to read the whole file (epochsize=0)
 -> Solution: Compile avg_q with -D_FILE_OFFSET_BITS=64!
 (Note that _LARGEFILE_SOURCE or _LARGEFILE64_SOURCE alone did not help and
 also are not necessary for this, but perhaps use them anyway!
 Checked using gcc -E -dM testfile.c to get all defined preprocessor symbols...)
 On 64-bit machines, CIFS access works without -D_FILE_OFFSET_BITS=64...
2008-09-01 12-13-41 Threading problems with avg_q_ui
 On the 64-Bit FBI computers, you often get "asynchronous X response" or similar errors with
 posplot in the threaded version. Using a debugger shows a segfault in the VOGL library,
 always at first write to a vmalloc-allocated buffer (viewp.c:40 or lines.c:42).
 Disabling threading now.
2009-05-18 11-20-01 Compile with opengl
	gtkglarea vs gtkglext
	 gtkglarea appears to be outdated now - it's maintained in gnome though.
	 gtkglext is a leaner but apparently better integrated set.
	 cf. http://www.mail-archive.com/gtk-app-devel-list@gnome.org/msg10995.html
	Porting SGI IrisGL to OpenGL
	 Actually the whole library binding has changed, no more device.h, qdevice(), ...
	 SGI "OpenGL porting guide" http://mecca.spd.louisville.edu/ebt-bin/nph-dweb/dynaweb/SGI_Developer/OpenGL_Porting/, toogl utility
	 eg v3f() -> glVertex3f()
	 http://bob.usuhs.mil/mailserv/list-archives/xforms-archive.98-1/0609.html
	 VOGL compatibility will be gone if we port posplot.c...
	 Better switch to cairo or a different high-level drawing library instead?
2009-07-29 17-21-46 Python/numpy integration using the redesigned buffer
 http://www.python.org/dev/peps/pep-3118/
Compile from a single source
	2007-06-18 11-23-00 Mostly done
	 Using CMake, this came much closer. I now moved all external libraries to ~/work
	 (before, sox/ was in bf/ and vogl was not there at all).
		[X] SOX used files generated generated by autoconf
		[X] Directory include/ used for patched-up includes
		[X] Directory lib/ used for patched-up libraries
		 Replaced by winlibs/
		[X] 2007-06-22 09-51-34 Special version of avg_q_ui and vogl_vgui_driver on WIN32
		 Finally FIXED by adding #ifdefs to be able to switch threaded operation
		 on or off in the same, GTK2 source. Threading is still used on linux for better
		 responsivity in pathologic cases, but of course the nonthreaded version works as well.
		 Hooray, no longer two versions, and one for outdated GTK1, to maintain!
[X] Internal trigger representation
 2006-06-13 09-40-52 Up to now, two different trigger lists with
 identical information were kept: tinfo->triggers was the malloc'ed
 epoch trigger list with a code '-1' file position pseudotrigger at
 the start and a code '0' end marker pseudotrigger at the end;
 Many single epochs, most notably get_epoch methods, used their own,
 typically file-based growing_buf based lists with their own
 methodname_push_trigger() function. A nearly identical insert_trigger()
 function was provided for the epoch triggers by trafo_std.c.
 Now, all triggers are stored in growing_buf structures, and there is
 one single push_trigger() function in trafo_std.c.
	ToDo
		[X] 2006-06-13 10-20-19 Output description in 'query triggers'
		[_] Replace '0' end marker and empty tests by current_length
		 Previous local versions of push_trigger did not add code 0 at all;
		 The current removal of this convention (to be able to add end markers
		 in the same fashion as other entries) may lead to truncated trigger
		 lists in the future. Anyway, as growing_buf keeps the current_length
		 for us, we can use this throughout. At the same time, we currently
		 test whether any triggers are available by checking 
		 triggers.buffer_start against NULL, which disallows using empty
		 preallocated buffers. Replace all of this by looking at current_length.
		[_] get_epoch_methods still containing the 1996(!) trigger buffer code
		 This includes MAX_BUFFERED_TRIGGERS and custom push_trigger, pop_trigger...
		 tucker/read_tucker.c vitaport/read_vitaport.c
