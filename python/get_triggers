#!/usr/bin/env python

import sys
import os
import avg_q
import avg_q.trgfile
from avg_q.avg_q_file import formats_and_extensions

import getopt
try:
 optlist, args = getopt.getopt(sys.argv[1:],'aA:')
except getopt.GetoptError as err:
 # print help information and exit:
 print(str(err)) # will print something like "option -a not recognized"
 print("Usage: [-a: output absolute time] [-A start_datetime: output absolute time using this start timestamp]")
 sys.exit(2)

output_abstime=False
start_datetime=None
for opt,arg in optlist:
 if opt=='-a':
  output_abstime=True
 if opt=='-A':
  import datetime
  output_abstime=True
  start_datetime=datetime.datetime.strptime(arg,"%Y-%m-%d %H:%M:%S")

a=avg_q.avg_q()
#a.debug=True
for filename in args:
 parts=filename.split(':')
 if len(parts)==2 and parts[0] in dict(formats_and_extensions):
  filetype,filename=parts
 else:
  filetype=None
 if not os.path.exists(filename):
  print("Oops, %s doesn't exist - skipping..." % filename)
  continue
 base,ext=os.path.splitext(filename)
 if filetype is None and ext in ['.trg','.crs','.tri','.log']:
  # Assume trigger file
  if ext=='.log':
   # Assume Presentation log file
   import avg_q.Presentation
   trg=avg_q.Presentation.PresLogfile(filename)
  else:
   trg=avg_q.trgfile.trgfile(filename)
 else:
  infile=avg_q.avg_q_file(filename,filetype)
  trg=a.get_filetriggers(infile)
 if start_datetime:
  trg.start_datetime=start_datetime
 triggers=trg.gettuples_abstime() if output_abstime else trg.gettuples()
 sfreq=float(trg.preamble.get('Sfreq',100.0))
 for point, code, description in triggers:
  if output_abstime:
   pos=str(point)
  else:
   pos="%gs" % (point/sfreq)
  if description:
   print("%s\t%d\t%s" % (pos, code, description))
  else:
   print("%s\t%d" % (pos, code))
 trg.close()
a.close()
